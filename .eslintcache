[{"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/index.js":"1","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/reportWebVitals.js":"2","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/App.js":"3","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/reducers/index.js":"4","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Home/Home.jsx":"5","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Auth/Auth.jsx":"6","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/NavBar/Navbar.jsx":"7","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/reducers/auth.js":"8","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Auth/styles.js":"9","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Auth/Icon.js":"10","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/NavBar/styles.js":"11","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/constants/actionTypes.js":"12","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/actions/auth.js":"13","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/api/index.js":"14","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/DonorList.js":"15","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Form.js":"16","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/APIService.js":"17","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Home/WithUser.js":"18","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Home/WithoutUser.js":"19","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Donor/Donor.jsx":"20","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Donor/AddDonor.js":"21","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Donor/EditDonor.js":"22","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Transaction/Transaction.jsx":"23","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Transaction Home/WithUserTransaction.js":"24","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/TransactionList.js":"25","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Transaction/AddTransaction.js":"26","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Transaction/EditTransaction.js":"27","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Donor/AddDonor2.js":"28"},{"size":776,"mtime":1616077374050,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":1611577315000,"results":"31","hashOfConfig":"30"},{"size":799,"mtime":1616775722783,"results":"32","hashOfConfig":"30"},{"size":111,"mtime":1611577315000,"results":"33","hashOfConfig":"30"},{"size":1623,"mtime":1618589604529,"results":"34","hashOfConfig":"30"},{"size":2924,"mtime":1618590188966,"results":"35","hashOfConfig":"30"},{"size":2255,"mtime":1616428608007,"results":"36","hashOfConfig":"30"},{"size":540,"mtime":1611577315000,"results":"37","hashOfConfig":"30"},{"size":618,"mtime":1611577315000,"results":"38","hashOfConfig":"30"},{"size":485,"mtime":1611577315000,"results":"39","hashOfConfig":"30"},{"size":304,"mtime":1616424272838,"results":"40","hashOfConfig":"30"},{"size":57,"mtime":1616428729141,"results":"41","hashOfConfig":"30"},{"size":550,"mtime":1615409555888,"results":"42","hashOfConfig":"30"},{"size":455,"mtime":1611577315000,"results":"43","hashOfConfig":"30"},{"size":6408,"mtime":1618592203700,"results":"44","hashOfConfig":"30"},{"size":11428,"mtime":1616419206530,"results":"45","hashOfConfig":"30"},{"size":2344,"mtime":1618590244695,"results":"46","hashOfConfig":"30"},{"size":1879,"mtime":1618604808503,"results":"47","hashOfConfig":"30"},{"size":344,"mtime":1618315970286,"results":"48","hashOfConfig":"30"},{"size":1601,"mtime":1618605963383,"results":"49","hashOfConfig":"30"},{"size":7242,"mtime":1618605409762,"results":"50","hashOfConfig":"30"},{"size":6712,"mtime":1618592228541,"results":"51","hashOfConfig":"30"},{"size":1678,"mtime":1616823862482,"results":"52","hashOfConfig":"30"},{"size":2121,"mtime":1616831332034,"results":"53","hashOfConfig":"30"},{"size":10535,"mtime":1618488300138,"results":"54","hashOfConfig":"30"},{"size":2958,"mtime":1616777465699,"results":"55","hashOfConfig":"30"},{"size":3428,"mtime":1616778467700,"results":"56","hashOfConfig":"30"},{"size":14462,"mtime":1618606906500,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"fk7i4s",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"60"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/index.js",[],["124","125"],"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/reportWebVitals.js",[],"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/App.js",[],"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/reducers/index.js",[],"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Home/Home.jsx",["126","127","128","129","130"],"import React, { useState, useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport WithUser from './WithUser'\nimport WithoutUser from './WithoutUser'\nimport WithUserTransaction from '../Transaction Home/WithUserTransaction'\nimport APIService from '../../APIService';\n\nexport const Home = () => {\n  const location = useLocation()\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')))\n  const [email, setEmail] = useState('')\n  useEffect(() => {\n    const token = user?.token\n    setUser(JSON.parse(localStorage.getItem('profile')))\n    // setBranch('Finance') //Donor, Finance, CNF\n    setEmail(user?.result.email)\n\n  }, [location])\n\n  if (user==null) {\n    return (\n      <div className=\"App\">\n        <WithoutUser />\n      </div>\n    )\n  }\n\n  else {\n    return (\n      <div className=\"App\">\n        <UserCheck email={email} />\n      </div>\n    )\n  }\n}\n\nconst UserCheck = (props) => {\n  const [staff, setStaff] = useState([])\n  const getItems = () => APIService.GetStaff();\n\n  useEffect(() => {\n    getItems().then(data => data.forEach(data_item => {\n      if (props.email == data_item.Email) {\n        setStaff(data_item)\n        localStorage.setItem('Team',JSON.stringify(data_item.Team))\n      }\n    }))\n  }, [props])\n\n  if (staff.Team == 'Donor') {\n    return (\n      <div className=\"App\">\n        <WithUser />\n      </div>\n    )\n  }\n\n  else if (staff.Team == 'Finance') {\n    return (\n      <div className=\"App\">\n        <WithUserTransaction />\n      </div>\n    )\n  }\n\n  else {\n    return (\n      <div className=\"App\">\n        <WithoutUser />\n      </div>\n    )\n  }\n\n}\n\n","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Auth/Auth.jsx",["131","132","133","134","135"],"import React, { useState } from 'react'\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport useStyles from './styles'\nimport { Icon } from './Icon'\nimport { GoogleLogin } from 'react-google-login'\nimport { useDispatch } from 'react-redux'\nimport { AUTH } from '../../constants/actionTypes'\nimport { useHistory } from 'react-router-dom'\nimport { signIn, signUp } from '../../actions/auth'\nimport { LOGOUT } from '../../constants/actionTypes'\n\nconst initialState = { firstName: '', lastName: '', email: '', password: '', confirmPassword: '' }\n\nexport const Auth = () => {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [isSignUp, setIsSignUp] = useState(false)\n    const [form, setForm] = useState(initialState)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        if (isSignUp) {\n            dispatch(signUp(form, history))\n        } else {\n            dispatch(signIn(form, history))\n        }\n    }\n\n    const googleSuccess = async (res) => {\n        const result = res?.profileObj\n        const token = res?.tokenId\n        // console.log(result.email)\n\n        try {\n            // dispatch({ type: AUTH, data: { result, token } });\n            // history.push('/')\n            // if (result.email.includes('@iiitd.ac.in')) {\n                dispatch({ type: AUTH, data: { result, token } });\n                history.push('/')\n            // }\n            // else {\n\n            //     alert('Unotherised user')\n            //     dispatch({ type: LOGOUT })\n            //     history.push('/auth')\n            // }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    const googleFailure = (error) => {\n        console.log(error)\n    }\n\n    return (\n        <Container component='main' maxWidth='xs'>\n            <Paper className={classes.paper} elevation={3}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <form className={classes.form} onSubmit={handleSubmit}>\n                    <GoogleLogin\n                        clientId='769388396500-95kaaug7sbjt0e3s33ukfr7d2nt2taf3.apps.googleusercontent.com'\n                        render={(renderProps) => (\n                            <Button className={classes.googleButton} color='primary' fullWidth onClick={renderProps.onClick} disabled={renderProps.disabled} startIcon={<Icon />} variant='contained'>\n                                Google Sign In\n                            </Button>\n                        )}\n                        onSuccess={googleSuccess}\n                        onFailure={googleFailure}\n                        cookiePolicy='single_host_origin'\n                    />\n                </form>\n            </Paper>\n        </Container>\n    )\n}\n","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/NavBar/Navbar.jsx",["136","137","138"],"import React, { useState, useEffect } from 'react'\nimport { Link, useHistory, useLocation } from 'react-router-dom'\nimport useStyles from './styles'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport HomeTwoToneIcon from '@material-ui/icons/HomeTwoTone';\nimport { Avatar, Typography, IconButton, Toolbar, AppBar, Button } from '@material-ui/core'\nimport { useDispatch } from 'react-redux'\nimport { LOGOUT } from '../../constants/actionTypes'\n\nexport const Navbar = () => {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const location = useLocation()\n\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')))\n    const userName = user?.result.name\n    const imgUrl = user?.result.imageUrl\n\n    const handleLogout = () => {\n        dispatch({ type: LOGOUT })\n        history.push('/auth')\n        setUser(null)\n    }\n\n    useEffect(() => {\n        const token = user?.token\n\n        setUser(JSON.parse(localStorage.getItem('profile')))\n    }, [location])\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon />\n                    </IconButton> */}\n                    <Typography component={Link} to='/' variant=\"h6\" className={classes.title}>\n                        <IconButton className={classes.logo} primary=\"white\" secondary=\"black\">\n                            <HomeTwoToneIcon />\n                        </IconButton>\n                    </Typography>\n                    {user\n                        ? <div>\n                            <Avatar ><img src={imgUrl} alt={userName} /></Avatar>\n                            <Typography variant='h6'>{userName}</Typography>\n                            <Button onClick={handleLogout} size='small' variant='contained' color='secondary'>Logout</Button>\n                        </div>\n                        : <Button component={Link} to='/auth' size='small' variant='contained' color='secondary'>Login</Button>\n                    }\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\n","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/reducers/auth.js",[],"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Auth/styles.js",[],"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Auth/Icon.js",[],"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/NavBar/styles.js",[],"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/constants/actionTypes.js",[],"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/actions/auth.js",[],"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/api/index.js",[],"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/DonorList.js",["139"],"import React from \"react\";\nimport { useTable, useFilters, useGlobalFilter, useAsyncDebounce } from 'react-table'\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport './Donors.css';\n\n\n// Define a default UI for filtering\nfunction GlobalFilter({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n}) {\n    const count = preGlobalFilteredRows.length\n    const [value, setValue] = React.useState(globalFilter)\n    const onChange = useAsyncDebounce(value => {\n        setGlobalFilter(value || undefined)\n    }, 200)\n\n    return (\n        <span>\n            Search:{' '}\n            <input\n                className=\"form-control\"\n                value={value || \"\"}\n                onChange={e => {\n                    setValue(e.target.value);\n                    onChange(e.target.value);\n                }}\n                placeholder={`${count} records...`}\n            />\n        </span>\n    )\n}\n\nfunction DefaultColumnFilter({\n    column: { filterValue, preFilteredRows, setFilter },\n}) {\n    const count = preFilteredRows.length\n\n    return (\n        <input\n            className=\"form-control\"\n            value={filterValue || ''}\n            onChange={e => {\n                setFilter(e.target.value || undefined)\n            }}\n            placeholder={`Search`}\n        />\n    )\n}\n\nfunction Table({ columns, data }) {\n\n    const defaultColumn = React.useMemo(\n        () => ({\n            // Default Filter UI\n            Filter: DefaultColumnFilter,\n        }),\n        []\n    )\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        state,\n        preGlobalFilteredRows,\n        setGlobalFilter,\n    } = useTable(\n        {\n            columns,\n            data,\n            defaultColumn\n        },\n        useFilters,\n        useGlobalFilter\n    )\n\n    return (\n        <div>\n            <GlobalFilter\n                preGlobalFilteredRows={preGlobalFilteredRows}\n                globalFilter={state.globalFilter}\n                setGlobalFilter={setGlobalFilter}\n            />\n            <br/>\n            <br/>\n            <table className=\"table table-dark\" {...getTableProps()}>\n                <thead>\n                    {headerGroups.map(headerGroup => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {headerGroup.headers.map(column => (\n                                <th {...column.getHeaderProps()}>\n                                    {column.render('Header')}\n                                    {/* Render the columns filter UI */}\n                                    <div>{column.canFilter ? column.render('Filter') : null}</div>\n                                </th>\n                            ))}\n                        </tr>\n                    ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                    {rows.map((row, i) => {\n                        prepareRow(row)\n                        return (\n                            <tr {...row.getRowProps()}>\n                                {row.cells.map(cell => {\n                                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                })}\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n            <br />\n            <div>Showing the first 20 results of {rows.length} rows</div>\n            {/* <div>\n                <pre className=\"temp\">\n                    <code>{JSON.stringify(state.filters, null, 2)}</code>\n                </pre>\n            </div> */}\n        </div>\n    )\n}\n\nfunction editBtn(props,donor) {\n\n    const editDonorBtn = (donor) => {\n        props.editBtn(donor)\n    }\n\n\n    return <button className = \"btn btn-primary\" onClick  = {() => editDonorBtn(donor)}>Update</button>\n}\n\n\n\nfunction DonorList(props) {\n\n    const donors = props.donors;\n\n    const newData = [];\n    donors.forEach(donor => {\n        newData.push({\n            PAN:donor.PAN,\n            Title:donor.Title,\n            First_Name:donor.First_Name,\n            Last_Name:donor.Last_Name,\n            Current_Address:donor.Current_Address,\n            Email:donor.Email,\n            Phone:donor.Phone,\n            Birth_Date:donor.Birth_Date,\n            Recruitment_Source:donor.Recruitment_Source,\n            Recruitment_Type:donor.Recruitment_Type,\n            Nationality:donor.Nationality,\n            Organisation:donor.Organisation,\n            Status:donor.Status,\n            Update_Donor: editBtn(props,donor)\n        });\n    });\n\n    const columns = React.useMemo(\n        () => [\n            {\n                Header: 'PAN',\n                accessor: 'PAN',\n            },\n            {\n                Header: 'Title',\n                accessor: 'Title',\n            },\n            {\n                Header: 'First Name',\n                accessor: 'First_Name',\n            },\n            {\n                Header: 'Last Name',\n                accessor: 'Last_Name',\n            },\n            {\n                Header: 'Current Address',\n                accessor: 'Current_Address',\n            },\n            {\n                Header: 'Email',\n                accessor: 'Email',\n            },\n            {\n                Header: 'Phone',\n                accessor: 'Phone',\n            },\n            {\n                Header: 'Birth Date',\n                accessor: 'Birth_Date',\n            },\n            {\n                Header: 'Recruitment Source',\n                accessor: 'Recruitment_Source',\n            },\n            {\n                Header: 'Recruitment Type',\n                accessor: 'Recruitment_Type',\n            },\n            {\n                Header: 'Nationality',\n                accessor: 'Nationality',\n            },\n            {\n                Header: 'Organisation',\n                accessor: 'Organisation',\n            },\n            {\n                Header: 'Status',\n                accessor: 'Status',\n            },\n            {\n                Header: '',\n                disableFilters: true,\n                accessor: 'Update_Donor',\n            },\n        ],\n        []\n    )\n\n    const data = newData\n\n    return (\n        <div className=\"Donors\">  \n        <Table columns={columns} data={data} />\n        </div>\n    )\n}\n\nexport default DonorList;","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Form.js",[],"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/APIService.js",[],"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Home/WithUser.js",["140"],"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Home/WithoutUser.js",[],"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Donor/Donor.jsx",["141","142","143","144","145","146"],"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Donor/AddDonor.js",["147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166"],"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Donor/EditDonor.js",["167","168"],"import React,{useState,useEffect} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport APIService from '../../APIService';\n\nfunction EditDonor(props) {\n\n    return (\n        <div className=\"App\">\n            <Form donor = {props.donor}/>\n        </div>\n    )\n}\n\nexport default EditDonor\n\n\nfunction Form(props) {\n    const history = useHistory()\n    const [PAN, setPAN] = useState('')\n    const [Title, setTitle] = useState('')\n    const [First_Name, setFirst_Name] = useState('')\n    const [Last_Name, setLast_Name] = useState('')\n    const [Current_Address, setCurrent_Address] = useState('')\n    const [Email, setEmail] = useState('')\n    const [Phone, setPhone] = useState('')\n    const [Birth_Date, setBirth_Date] = useState('')\n    const [Recruitment_Source, setRecruitment_Source] = useState('')\n    const [Recruitment_Type, setRecruitment_Type] = useState('')\n    const [Nationality, setNationality] = useState('')\n    const [Organisation, setOrganisation] = useState('')\n    const [Status, setStatus] = useState('')\n    console.log(props.donor)\n    // const history = useHistory()\n\n    useEffect(() => {\n        setPAN(props.donor.PAN)\n        setTitle(props.donor.Title)\n        setFirst_Name(props.donor.First_Name)\n        setLast_Name(props.donor.Last_Name)\n        setCurrent_Address(props.donor.Current_Address)\n        setEmail(props.donor.Email)\n        setPhone(props.donor.Phone)\n        setBirth_Date(props.donor.Birth_Date)\n        setRecruitment_Source(props.donor.Recruitment_Source)\n        setRecruitment_Type(props.donor.Recruitment_Type)\n        setNationality(props.donor.Nationality)\n        setOrganisation(props.donor.Organisation)\n        setStatus(props.donor.Status)\n    }, [props.donor])\n\n    const updateDonor = () => {\n        APIService.UpdateDonor(props.donor.id, {\n            PAN,\n            Title,\n            First_Name,\n            Last_Name,\n            Current_Address,\n            Email,\n            Phone,\n            Birth_Date,\n            Recruitment_Source,\n            Recruitment_Type,\n            Nationality,\n            Organisation,\n            Status\n        })\n        alert(\"Donor Entry Updated\");\n        history.push('/');\n    }\n\n    const deleteBtn = () => {\n        var donor_check = prompt(\"Please enter the First_Name of the Donor:\", props.donor.First_Name);\n        if (donor_check == null || donor_check !=props.donor.First_Name || donor_check == \"\") {\n            alert(\"Try Again, Donor Name miss match\")\n        } \n        else {\n            APIService.DeleteDonor(props.donor.id)\n            .catch(error => console.log(error))\n            alert(\"Donor Entry Deleted\");\n            history.push('/');\n        }\n        }\n\n    return (\n        <div className=\"mb-3\">\n            <label htmlFor='PAN' className='form-label'>PAN</label>\n            <input type=\"text\" className='form-control' id='PAN' placeholder = \"Please Enter the PAN\"\n            value={PAN} onChange={e => setPAN(e.target.value)}/>\n\n\n            <label htmlFor='Title' className='form-label'>Title</label>\n            <input type=\"text\" className='form-control' id='Title' placeholder = \"Please Enter the Title\"\n            value={Title} onChange={e => setTitle(e.target.value)}/>\n\n\n            <label htmlFor='First_Name' className='form-label'>First Name</label>\n            <input type=\"text\" className='form-control' id='First_Name' placeholder = \"Please Enter the First Name\"\n            value={First_Name} onChange={e => setFirst_Name(e.target.value)}/>\n\n\n            <label htmlFor='Last_Name' className='form-label'>Last Name</label>\n            <input type=\"text\" className='form-control' id='Last_Name' placeholder = \"Please Enter the Last Name\"\n            value={Last_Name} onChange={e => setLast_Name(e.target.value)}/>\n\n\n            <label htmlFor='Current_Address' className='form-label'>Current Address</label>\n            <input type=\"text\" className='form-control' id='Current_Address' placeholder = \"Please Enter the Current Address\"\n            value={Current_Address} onChange={e => setCurrent_Address(e.target.value)}/>\n\n\n            <label htmlFor='Email' className='form-label'>Email</label>\n            <input type=\"text\" className='form-control' id='Email' placeholder = \"Please Enter the Email\"\n            value={Email} onChange={e => setEmail(e.target.value)}/>\n\n\n            <label htmlFor='Phone' className='form-label'>Phone</label>\n            <input type=\"text\" className='form-control' id='Phone' placeholder = \"Please Enter the Phone\"\n            value={Phone} onChange={e => setPhone(e.target.value)}/>\n\n\n            <label htmlFor='Birth_Date' className='form-label'>Birth Date</label>\n            <input type=\"text\" className='form-control' id='Birth_Date' placeholder = \"Please Enter the Birth Date\"\n            value={Birth_Date} onChange={e => setBirth_Date(e.target.value)}/>\n\n\n            <label htmlFor='Recruitment_Source' className='form-label'>Recruitment Source</label>\n            <input type=\"text\" className='form-control' id='Recruitment_Source' placeholder = \"Please Enter the Recruitment Source\"\n            value={Recruitment_Source} onChange={e => setRecruitment_Source(e.target.value)}/>\n\n\n            <label htmlFor='Recruitment_Type' className='form-label'>Recruitment Type</label>\n            <input type=\"text\" className='form-control' id='Recruitment_Type' placeholder = \"Please Enter the Recruitment Type\"\n            value={Recruitment_Type} onChange={e => setRecruitment_Type(e.target.value)}/>\n\n\n            <label htmlFor='Nationality' className='form-label'>Nationality</label>\n            <input type=\"text\" className='form-control' id='Nationality' placeholder = \"Please Enter the Nationality\"\n            value={Nationality} onChange={e => setNationality(e.target.value)}/>\n\n\n            <label htmlFor='Organisation' className='form-label'>Organisation</label>\n            <input type=\"text\" className='form-control' id='Organisation' placeholder = \"Please Enter the Organisation\"\n            value={Organisation} onChange={e => setOrganisation(e.target.value)}/>\n\n            <label htmlFor='Status' className='form-label'>Status</label>\n            <input type=\"text\" className='form-control' id='Status' placeholder = \"Please Enter the Status\"\n            value={Status} onChange={e => setStatus(e.target.value)}/>  \n\n            <br/>\n\n            <div className = \"row\">   \n                <button onClick={updateDonor} className=\"btn btn-success\">Update Donor</button>\n            <div className = \"col\">\n                <br/>\n            </div>\n                <button onClick = {deleteBtn} className = \"btn btn-danger\">Delete</button>\n          </div>\n        </div>\n    )\n}","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Transaction/Transaction.jsx",["169","170","171","172","173","174"],"import React, { useState, useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport AddTransaction from './AddTransaction'\nimport EditTransaction from './EditTransaction'\nimport WithoutUser from '../Home/WithoutUser'\n\nexport const Transaction = () => {\n    const location = useLocation()\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')))\n    const [transaction, setTransaction] = useState(JSON.parse(localStorage.getItem('curr_transaction')))\n    useEffect(() => {\n        const token = user?.token\n        const token2 = transaction?.token\n        setUser(JSON.parse(localStorage.getItem('profile')))\n        setTransaction(JSON.parse(localStorage.getItem('curr_transaction')))\n    }, [location])\n  \n    return (\n        <div className=\"App\">\n          {user ? <TeamCheck transaction = {transaction} /> : <WithoutUser/>}\n        </div>\n    )\n  }\n\n\nconst TeamCheck = (props) => {\n  const [transaction, setTransaction] = useState(props.transaction)\n  const [team, setTeam] = useState(JSON.parse(localStorage.getItem('Team')))\n  useEffect(() => {\n    setTransaction(props.transaction)\n    setTeam(JSON.parse(localStorage.getItem('Team')))\n  }, [])\n  return (\n      <div className=\"App\">\n        {team != 'Donor' ? <TransactionCheck transaction = {transaction} /> : <WithoutUser/> }\n      </div>\n  )\n}\n\nconst TransactionCheck = (props) => {\n    const [transaction, setTransaction] = useState([])\n    useEffect(() => {\n        setTransaction(props.transaction)\n    }, [])\n    return (\n        <div className=\"App\">\n          {transaction ? <EditTransaction transaction={transaction}/> : <AddTransaction/> }\n        </div>\n    )\n}","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Transaction Home/WithUserTransaction.js",[],"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/TransactionList.js",["175","176"],"import React, { useState, useEffect } from 'react';\nimport { useTable, useFilters, useGlobalFilter, useAsyncDebounce } from 'react-table'\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport './Donors.css';\nimport APIService from '../APIService';\nimport { PDFDownloadLink, Document, Page, Text, View, StyleSheet, Image } from '@react-pdf/renderer';\nimport im1 from '../images/sign.png';\nimport im2 from '../images/logo.png';\n// import im1 from '/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/images/sign.png';\n// import im2 from '/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/images/logo.png';\n\n\n// Define a default UI for filtering\nfunction GlobalFilter({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n}) {\n    const count = preGlobalFilteredRows.length\n    const [value, setValue] = React.useState(globalFilter)\n    const onChange = useAsyncDebounce(value => {\n        setGlobalFilter(value || undefined)\n    }, 200)\n\n    return (\n        <span>\n            Search:{' '}\n            <input\n                className=\"form-control\"\n                value={value || \"\"}\n                onChange={e => {\n                    setValue(e.target.value);\n                    onChange(e.target.value);\n                }}\n                placeholder={`${count} records...`}\n            />\n        </span>\n    )\n}\n\nfunction DefaultColumnFilter({\n    column: { filterValue, preFilteredRows, setFilter },\n}) {\n    const count = preFilteredRows.length\n\n    return (\n        <input\n            className=\"form-control\"\n            value={filterValue || ''}\n            onChange={e => {\n                setFilter(e.target.value || undefined)\n            }}\n            placeholder={`Search`}\n        />\n    )\n}\n\nfunction Table({ columns, data }) {\n\n    const defaultColumn = React.useMemo(\n        () => ({\n            // Default Filter UI\n            Filter: DefaultColumnFilter,\n        }),\n        []\n    )\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        state,\n        preGlobalFilteredRows,\n        setGlobalFilter,\n    } = useTable(\n        {\n            columns,\n            data,\n            defaultColumn\n        },\n        useFilters,\n        useGlobalFilter\n    )\n\n    return (\n        <div>\n            <GlobalFilter\n                preGlobalFilteredRows={preGlobalFilteredRows}\n                globalFilter={state.globalFilter}\n                setGlobalFilter={setGlobalFilter}\n            />\n            <br/>\n            <br/>\n            <table className=\"table table-dark\" {...getTableProps()}>\n                <thead>\n                    {headerGroups.map(headerGroup => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {headerGroup.headers.map(column => (\n                                <th {...column.getHeaderProps()}>\n                                    {column.render('Header')}\n                                    {/* Render the columns filter UI */}\n                                    <div>{column.canFilter ? column.render('Filter') : null}</div>\n                                </th>\n                            ))}\n                        </tr>\n                    ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                    {rows.map((row, i) => {\n                        prepareRow(row)\n                        return (\n                            <tr {...row.getRowProps()}>\n                                {row.cells.map(cell => {\n                                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                })}\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n            <br />\n            <div>Showing the first 20 results of {rows.length} rows</div>\n            {/* <div>\n                <pre className=\"temp\">\n                    <code>{JSON.stringify(state.filters, null, 2)}</code>\n                </pre>\n            </div> */}\n        </div>\n    )\n}\n\nfunction editBtn(props,transaction,aproval,donor) {\n\n    const editDonorBtn = (transaction) => {\n        props.editBtn(transaction)\n    }\n    const file_name = \"transaction_\" + donor.First_Name + \"_\" + transaction.id + \".pdf\";\n    const today = new Date();\n    const dd = String(today.getDate()).padStart(2, '0');\n    const mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    const yyyy = today.getFullYear();\n\n    const date_today = mm + '/' + dd + '/' + yyyy;\n    const numWords = require('num-words')\n    const amountInWords = numWords(transaction.Amount)\n\n    return ( <div> \n            {aproval ? \n            <div>\n                {transaction && <PDFDownloadLink document={<MyDoc transaction = {transaction} donor = {donor} date={date_today} amountInWords={amountInWords}/>} fileName={file_name}>\n                {({ blob, url, loading, error }) => (loading ? 'Loading document...' : <button className = \"btn btn-primary\" >PDF</button>)}\n              </PDFDownloadLink> }\n              </div>: \n                <button className = \"btn btn-primary\" onClick  = {() => editDonorBtn(transaction)}>Edit</button> }\n        </div>\n    )\n    \n}\n\nfunction approveBtn(props,transaction,approval,Poc,Donor,Amount,Currency,Date) {\n    const Is_Approved = true;\n    const approveDonorBtn = (transaction) => {\n        APIService.UpdateTransaction(transaction.id, {\n            Poc,\n            Donor,\n            Amount,\n            Currency,\n            Date,\n            Is_Approved\n        }).then(resp => console.log(resp))\n        props.approveBtn();\n    }\n    return ( <div> \n            {approval ? \n                <div style={{color: '#66FF99'}}>Approved</div> : \n                <div>\n                <button className = \"btn btn-primary\" onClick  = {() => approveDonorBtn(transaction)}>Approve</button> \n                </div>}\n        </div>\n    )\n    \n}\n\nconst styles = StyleSheet.create({\n    page_style: {\n        margin: 10\n    },\n    section: { \n        padding: 10, \n        margin: 10,\n        flexGrow: 1\n    },\n    image: {\n      width: \"30%\",\n      padding: 2\n    },\n    text: {\n      fontSize: 11,\n      textAlign: 'center'\n    },\n    text_right: {\n      fontSize: 11,\n      textAlign: 'left'\n    }\n  });\n\n\nconst MyDoc = (props) => (\n    <Document>\n      <Page size=\"LETTER\" orientation=\"landscape\" style={styles.page_style} wrap>\n      <View>\n        <Image style={styles.image} src={im2} />\n    </View>\n            <View style={styles.section}>\n                <Text style={styles.text_right}>\n                    Donations are exempt under Section 80G of the IT Act 1961:{\"\\n\"}\n                    No. {props.transaction.id}{\"\\n\"}\n                    Pan No: {props.donor.id} {/*convert to pan number when defined*/}\n                </Text>\n            </View>\n            <View>\n                <Text style={styles.text_right}>\n                    Receipt Date: {props.date}{\"\\n\"}\n                    Receipt No: {props.transaction.id}{\"\\n\"}\n                    Donation Date: {props.transaction.Date}{\"\\n\"}\n                    Received with thanks from: {props.donor.First_Name}{\"\\n\"}\n                    Address/Email of Donor: {props.donor.Email}{\"\\n\"}\n                    Pan of Donor: {props.donor.id}{\"\\n\"}\n                    Sum of Rupees (in words): {props.amountInWords}{\"\\n\"}\n                    By Cash/Online/Cheque*: {\"\\n\"}\n                </Text>\n            </View>\n            \n            <View style={styles.section} wrap={false}>\n                <Text style={styles.text_right}>\n                For Simple Education Foundation\n                </Text>\n                <Image style={styles.image} src={im1} />\n            </View>\n            <View\n                style={{\n                    borderBottomColor: 'black',\n                    borderBottomWidth: 1,\n                }}\n                />\n            <View style={styles.section}>\n                <Text style={styles.text}>\n                    H-1, Bandhu Vihar, CGHS, Sector – 10, Plot No. – 11, Dwarka, New Delhi – 110075{\"\\n\"}\n                    +91-9810704035 | www.simpleeducationfoundation.org | connect@simpleeducationfoundation.org\n                </Text>\n            </View>\n        </Page>\n    </Document>\n  )\n\nfunction getDonor(transaction,donors){\n    var d = null;\n    donors.forEach(donor => {\n        if (donor.id == transaction) {\n            d = donor;\n        }\n    });\n    if (d == null) {\n        console.log(transaction)\n    }\n    return d;\n}\n\nfunction TransactionList(props) {\n\n    const getItems = () => APIService.GetDonor();\n    const [donors, setDonors] = useState([]);\n    useEffect(() => {\n        getItems().then(data => setDonors(data));\n      }, []);\n\n    const transactions = props.transactions;\n    const newData = [];\n    transactions.forEach(transaction => {\n        newData.push({\n            Poc: transaction.Poc,\n            Donor: getDonor(transaction.Donor,donors).First_Name,\n            Amount: transaction.Amount,\n            Currency: transaction.Currency,\n            Date: transaction.Date,\n            Approve_Transaction: approveBtn(props,transaction,transaction.Is_Approved,transaction.Poc,transaction.Donor,transaction.Amount,transaction.Currency,transaction.Date),\n            Edit_Transaction: editBtn(props,transaction,transaction.Is_Approved,getDonor(transaction.Donor,donors))\n        });\n    });\n\n    const columns = React.useMemo(\n        () => [\n            {\n                Header: 'Poc',\n                accessor: 'Poc',\n            },\n            {\n                Header: 'Donor',\n                accessor: 'Donor',\n            },\n            {\n                Header: 'Amount',\n                accessor: 'Amount',\n            },\n            {\n                Header: 'Currency',\n                accessor: 'Currency',\n            },\n            {\n                Header: 'Date',\n                accessor: 'Date',\n            },\n            {\n                Header: '',\n                disableFilters: true,\n                accessor: 'Approve_Transaction',\n            },\n            {\n                Header: '',\n                disableFilters: true,\n                accessor: 'Edit_Transaction',\n            },\n        ],\n        []\n    )\n\n    const data = newData\n\n    return (\n        <div className=\"Donors\">  \n        <Table columns={columns} data={data} />\n        </div>\n    )\n}\n\nexport default TransactionList;\n","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Transaction/AddTransaction.js",["177","178","179","180","181"],"import React,{useState,useEffect} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport APIService from '../../APIService';\n\nfunction AddTransaction() {\n\n    return (\n        <div className=\"App\">\n            <Form/>\n        </div>\n    )\n}\n\nexport default AddTransaction\n\n\nfunction Form() {\n    const history = useHistory()\n    const [Poc, setPoc] = useState('')\n    const [Donor, setDonor] = useState('')\n    const [Amount, setAmount] = useState('')\n    const [Currency, setCurrency] = useState('')\n    const [Date, setDate] = useState('')\n    // const history = useHistory()\n\n    useEffect(() => {\n        setPoc('')\n        setDonor('')\n        setAmount('')\n        setCurrency('')\n        setDate('')\n    }, [])\n\n    const addTransaction = () => {\n        APIService.AddTransaction({\n            Poc,\n            Donor,\n            Amount,\n            Currency,\n            Date\n        })\n        .then(resp => {\n            if (check(resp)) {\n                alert(\"New Transaction Added\")\n                history.push('/')\n            }\n            else{\n                alert(\"Error in Input\")\n            }\n        }\n        )\n        \n    }\n\n    return (\n        <div className=\"mb-3\">\n            <label htmlFor='Poc' className='form-label'>Poc</label>\n            <input type=\"text\" className='form-control' id='Poc' placeholder = \"Please Enter the Poc\"\n            value={Poc} onChange={e => setPoc(e.target.value)}/>\n\n\n            <label htmlFor='Donor' className='form-label'>Donor</label>\n            <input type=\"text\" className='form-control' id='Donor' placeholder = \"Please Enter the Donor\"\n            value={Donor} onChange={e => setDonor(e.target.value)}/>\n\n\n            <label htmlFor='Amount' className='form-label'>Amount</label>\n            <input type=\"text\" className='form-control' id='Amount' placeholder = \"Please Enter the Amount\"\n            value={Amount} onChange={e => setAmount(e.target.value)}/>\n\n\n            <label htmlFor='Currency' className='form-label'>Currency</label>\n            <input type=\"text\" className='form-control' id='Currency' placeholder = \"Please Enter the Currency\"\n            value={Currency} onChange={e => setCurrency(e.target.value)}/>\n\n\n            <label htmlFor='Date' className='form-label'>Date</label>\n            <input type=\"text\" className='form-control' id='Date' placeholder = \"Please Enter the Date\"\n            value={Date} onChange={e => setDate(e.target.value)}/>\n\n            <br/>\n            <button onClick={addTransaction} className=\"btn btn-success\">Add Transaction</button>\n        </div>\n    )\n}\n\nfunction check(resp){\n    if (resp.Date == \"Date has wrong format. Use one of these formats instead: YYYY-MM-DD.\" || resp.Amount == \"A valid integer is required.\" || resp.Poc == \"This field may not be blank.\" || resp.Donor == \"This field may not be blank.\" || resp.Currency == \"This field may not be blank.\") {\n        return false;\n    }\n    return true;\n}","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Transaction/EditTransaction.js",["182","183"],"import React,{useState,useEffect} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport APIService from '../../APIService';\n\nfunction EditTransaction(props) {\n\n    return (\n        <div className=\"App\">\n            <Form transaction = {props.transaction}/>\n        </div>\n    )\n}\n\nexport default EditTransaction\n\n\nfunction Form(props) {\n    const history = useHistory()\n    const [Poc, setPoc] = useState('')\n    const [Donor, setDonor] = useState('')\n    const [Amount, setAmount] = useState('')\n    const [Currency, setCurrency] = useState('')\n    const [Date, setDate] = useState('')\n    console.log(props.transaction)\n\n    // const history = useHistory()\n\n    useEffect(() => {\n        setPoc(props.transaction.Poc)\n        setDonor(props.transaction.Donor)\n        setAmount(props.transaction.Amount)\n        setCurrency(props.transaction.Currency)\n        setDate(props.transaction.Date)\n    }, [props.transaction])\n\n    const updateTransaction = () => {\n        APIService.UpdateTransaction(props.transaction.id, {\n            Poc,\n            Donor,\n            Amount,\n            Currency,\n            Date\n        })\n        alert(\"Transaction Entry Updated\");\n        history.push('/');\n    }\n\n    const deleteBtn = () => {\n        var transaction_check = prompt(\"Please enter the POC of the Donor:\", props.transaction.Poc);\n        if (transaction_check == null || transaction_check !=props.transaction.Poc || transaction_check == \"\") {\n            alert(\"Try Again, Transaction Name miss match\")\n        } \n        else {\n            APIService.DeleteTransaction(props.transaction.id)\n            .catch(error => console.log(error))\n            alert(\"Transaction Entry Deleted\");\n            history.push('/');\n        }\n        }\n\n    return (\n        <div className=\"mb-3\">\n            <label htmlFor='Poc' className='form-label'>Poc</label>\n            <input type=\"text\" className='form-control' id='Poc' placeholder = \"Please Enter the Poc\"\n            value={Poc} onChange={e => setPoc(e.target.value)}/>\n\n\n            <label htmlFor='Donor' className='form-label'>Donor</label>\n            <input type=\"text\" className='form-control' id='Donor' placeholder = \"Please Enter the Donor\"\n            value={Donor} onChange={e => setDonor(e.target.value)}/>\n\n\n            <label htmlFor='Amount' className='form-label'>Amount</label>\n            <input type=\"text\" className='form-control' id='Amount' placeholder = \"Please Enter the Amount\"\n            value={Amount} onChange={e => setAmount(e.target.value)}/>\n\n\n            <label htmlFor='Currency' className='form-label'>Currency</label>\n            <input type=\"text\" className='form-control' id='Currency' placeholder = \"Please Enter the Currency\"\n            value={Currency} onChange={e => setCurrency(e.target.value)}/>\n\n\n            <label htmlFor='Date' className='form-label'>Date</label>\n            <input type=\"text\" className='form-control' id='Date' placeholder = \"Please Enter the Date\"\n            value={Date} onChange={e => setDate(e.target.value)}/>\n\n            <br/>\n\n            <div className = \"row\">   \n                <button onClick={updateTransaction} className=\"btn btn-success\">Update Transaction</button>\n            <div className = \"col\">\n                <br/>\n            </div>\n                <button onClick = {deleteBtn} className = \"btn btn-danger\">Delete</button>\n          </div>\n        </div>\n    )\n}","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Donor/AddDonor2.js",["184","185","186","187","188","189","190"],{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":13,"column":11,"nodeType":"197","messageId":"198","endLine":13,"endColumn":16},{"ruleId":"199","severity":1,"message":"200","line":18,"column":6,"nodeType":"201","endLine":18,"endColumn":16,"suggestions":"202"},{"ruleId":"203","severity":1,"message":"204","line":43,"column":23,"nodeType":"205","messageId":"206","endLine":43,"endColumn":25},{"ruleId":"203","severity":1,"message":"204","line":50,"column":18,"nodeType":"205","messageId":"206","endLine":50,"endColumn":20},{"ruleId":"203","severity":1,"message":"204","line":58,"column":23,"nodeType":"205","messageId":"206","endLine":58,"endColumn":25},{"ruleId":"195","severity":1,"message":"207","line":2,"column":33,"nodeType":"197","messageId":"198","endLine":2,"endColumn":37},{"ruleId":"195","severity":1,"message":"208","line":2,"column":39,"nodeType":"197","messageId":"198","endLine":2,"endColumn":49},{"ruleId":"195","severity":1,"message":"209","line":11,"column":10,"nodeType":"197","messageId":"198","endLine":11,"endColumn":16},{"ruleId":"195","severity":1,"message":"210","line":19,"column":22,"nodeType":"197","messageId":"198","endLine":19,"endColumn":33},{"ruleId":"195","severity":1,"message":"211","line":20,"column":18,"nodeType":"197","messageId":"198","endLine":20,"endColumn":25},{"ruleId":"195","severity":1,"message":"212","line":4,"column":8,"nodeType":"197","messageId":"198","endLine":4,"endColumn":16},{"ruleId":"195","severity":1,"message":"196","line":27,"column":15,"nodeType":"197","messageId":"198","endLine":27,"endColumn":20},{"ruleId":"199","severity":1,"message":"213","line":30,"column":8,"nodeType":"201","endLine":30,"endColumn":18,"suggestions":"214"},{"ruleId":"195","severity":1,"message":"215","line":38,"column":11,"nodeType":"197","messageId":"198","endLine":38,"endColumn":16},{"ruleId":"195","severity":1,"message":"216","line":40,"column":9,"nodeType":"197","messageId":"198","endLine":40,"endColumn":17},{"ruleId":"195","severity":1,"message":"196","line":12,"column":15,"nodeType":"197","messageId":"198","endLine":12,"endColumn":20},{"ruleId":"195","severity":1,"message":"217","line":13,"column":15,"nodeType":"197","messageId":"198","endLine":13,"endColumn":21},{"ruleId":"199","severity":1,"message":"218","line":16,"column":8,"nodeType":"201","endLine":16,"endColumn":18,"suggestions":"219"},{"ruleId":"199","severity":1,"message":"220","line":31,"column":8,"nodeType":"201","endLine":31,"endColumn":10,"suggestions":"221"},{"ruleId":"203","severity":1,"message":"222","line":34,"column":17,"nodeType":"205","messageId":"206","endLine":34,"endColumn":19},{"ruleId":"199","severity":1,"message":"220","line":45,"column":8,"nodeType":"201","endLine":45,"endColumn":10,"suggestions":"223"},{"ruleId":"203","severity":1,"message":"204","line":153,"column":25,"nodeType":"205","messageId":"206","endLine":153,"endColumn":27},{"ruleId":"203","severity":1,"message":"204","line":153,"column":134,"nodeType":"205","messageId":"206","endLine":153,"endColumn":136},{"ruleId":"203","severity":1,"message":"204","line":153,"column":192,"nodeType":"205","messageId":"206","endLine":153,"endColumn":194},{"ruleId":"203","severity":1,"message":"204","line":153,"column":261,"nodeType":"205","messageId":"206","endLine":153,"endColumn":263},{"ruleId":"203","severity":1,"message":"204","line":153,"column":365,"nodeType":"205","messageId":"206","endLine":153,"endColumn":367},{"ruleId":"203","severity":1,"message":"204","line":153,"column":453,"nodeType":"205","messageId":"206","endLine":153,"endColumn":455},{"ruleId":"203","severity":1,"message":"204","line":153,"column":520,"nodeType":"205","messageId":"206","endLine":153,"endColumn":522},{"ruleId":"203","severity":1,"message":"204","line":153,"column":574,"nodeType":"205","messageId":"206","endLine":153,"endColumn":576},{"ruleId":"203","severity":1,"message":"204","line":153,"column":636,"nodeType":"205","messageId":"206","endLine":153,"endColumn":638},{"ruleId":"203","severity":1,"message":"204","line":153,"column":729,"nodeType":"205","messageId":"206","endLine":153,"endColumn":731},{"ruleId":"203","severity":1,"message":"204","line":153,"column":792,"nodeType":"205","messageId":"206","endLine":153,"endColumn":794},{"ruleId":"203","severity":1,"message":"204","line":153,"column":853,"nodeType":"205","messageId":"206","endLine":153,"endColumn":855},{"ruleId":"203","severity":1,"message":"204","line":153,"column":901,"nodeType":"205","messageId":"206","endLine":153,"endColumn":903},{"ruleId":"203","severity":1,"message":"204","line":153,"column":963,"nodeType":"205","messageId":"206","endLine":153,"endColumn":965},{"ruleId":"203","severity":1,"message":"204","line":153,"column":1011,"nodeType":"205","messageId":"206","endLine":153,"endColumn":1013},{"ruleId":"203","severity":1,"message":"204","line":153,"column":1077,"nodeType":"205","messageId":"206","endLine":153,"endColumn":1079},{"ruleId":"203","severity":1,"message":"204","line":153,"column":1138,"nodeType":"205","messageId":"206","endLine":153,"endColumn":1140},{"ruleId":"203","severity":1,"message":"204","line":153,"column":1199,"nodeType":"205","messageId":"206","endLine":153,"endColumn":1201},{"ruleId":"203","severity":1,"message":"204","line":153,"column":1249,"nodeType":"205","messageId":"206","endLine":153,"endColumn":1251},{"ruleId":"203","severity":1,"message":"204","line":153,"column":1297,"nodeType":"205","messageId":"206","endLine":153,"endColumn":1299},{"ruleId":"203","severity":1,"message":"222","line":73,"column":48,"nodeType":"205","messageId":"206","endLine":73,"endColumn":50},{"ruleId":"203","severity":1,"message":"204","line":73,"column":88,"nodeType":"205","messageId":"206","endLine":73,"endColumn":90},{"ruleId":"195","severity":1,"message":"196","line":12,"column":15,"nodeType":"197","messageId":"198","endLine":12,"endColumn":20},{"ruleId":"195","severity":1,"message":"217","line":13,"column":15,"nodeType":"197","messageId":"198","endLine":13,"endColumn":21},{"ruleId":"199","severity":1,"message":"224","line":16,"column":8,"nodeType":"201","endLine":16,"endColumn":18,"suggestions":"225"},{"ruleId":"199","severity":1,"message":"226","line":32,"column":6,"nodeType":"201","endLine":32,"endColumn":8,"suggestions":"227"},{"ruleId":"203","severity":1,"message":"222","line":35,"column":15,"nodeType":"205","messageId":"206","endLine":35,"endColumn":17},{"ruleId":"199","severity":1,"message":"226","line":44,"column":8,"nodeType":"201","endLine":44,"endColumn":10,"suggestions":"228"},{"ruleId":"195","severity":1,"message":"215","line":44,"column":11,"nodeType":"197","messageId":"198","endLine":44,"endColumn":16},{"ruleId":"203","severity":1,"message":"204","line":261,"column":22,"nodeType":"205","messageId":"206","endLine":261,"endColumn":24},{"ruleId":"203","severity":1,"message":"204","line":88,"column":19,"nodeType":"205","messageId":"206","endLine":88,"endColumn":21},{"ruleId":"203","severity":1,"message":"204","line":88,"column":108,"nodeType":"205","messageId":"206","endLine":88,"endColumn":110},{"ruleId":"203","severity":1,"message":"204","line":88,"column":154,"nodeType":"205","messageId":"206","endLine":88,"endColumn":156},{"ruleId":"203","severity":1,"message":"204","line":88,"column":202,"nodeType":"205","messageId":"206","endLine":88,"endColumn":204},{"ruleId":"203","severity":1,"message":"204","line":88,"column":253,"nodeType":"205","messageId":"206","endLine":88,"endColumn":255},{"ruleId":"203","severity":1,"message":"222","line":50,"column":60,"nodeType":"205","messageId":"206","endLine":50,"endColumn":62},{"ruleId":"203","severity":1,"message":"204","line":50,"column":105,"nodeType":"205","messageId":"206","endLine":50,"endColumn":107},{"ruleId":"195","severity":1,"message":"229","line":4,"column":24,"nodeType":"197","messageId":"198","endLine":4,"endColumn":34},{"ruleId":"195","severity":1,"message":"230","line":59,"column":12,"nodeType":"197","messageId":"198","endLine":59,"endColumn":21},{"ruleId":"195","severity":1,"message":"231","line":59,"column":23,"nodeType":"197","messageId":"198","endLine":59,"endColumn":35},{"ruleId":"203","severity":1,"message":"204","line":376,"column":25,"nodeType":"205","messageId":"206","endLine":376,"endColumn":27},{"ruleId":"203","severity":1,"message":"204","line":376,"column":113,"nodeType":"205","messageId":"206","endLine":376,"endColumn":115},{"ruleId":"203","severity":1,"message":"204","line":376,"column":167,"nodeType":"205","messageId":"206","endLine":376,"endColumn":169},{"ruleId":"203","severity":1,"message":"204","line":376,"column":213,"nodeType":"205","messageId":"206","endLine":376,"endColumn":215},"no-native-reassign",["232"],"no-negated-in-lhs",["233"],"no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'user?.result.email' and 'user?.token'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setEmail' needs the current value of 'user.result.email'.","ArrayExpression",["234"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Grid' is defined but never used.","'Typography' is defined but never used.","'LOGOUT' is defined but never used.","'setIsSignUp' is assigned a value but never used.","'setForm' is assigned a value but never used.","'MenuIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'user?.token'. Either include it or remove the dependency array.",["235"],"'count' is assigned a value but never used.","'mybutton' is assigned a value but never used.","'token2' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'donor?.token' and 'user?.token'. Either include them or remove the dependency array.",["236"],"React Hook useEffect has a missing dependency: 'props.donor'. Either include it or remove the dependency array. If 'setDonor' needs the current value of 'props.donor', you can also switch to useReducer instead of useState and read 'props.donor' in the reducer.",["237"],"Expected '!==' and instead saw '!='.",["238"],"React Hook useEffect has missing dependencies: 'transaction?.token' and 'user?.token'. Either include them or remove the dependency array.",["239"],"React Hook useEffect has a missing dependency: 'props.transaction'. Either include it or remove the dependency array. If 'setTransaction' needs the current value of 'props.transaction', you can also switch to useReducer instead of useState and read 'props.transaction' in the reducer.",["240"],["241"],"'InputGroup' is defined but never used.","'validated' is assigned a value but never used.","'setValidated' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"248","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"253","fix":"255"},"Update the dependencies array to be: [location, user?.result.email, user?.token]",{"range":"256","text":"257"},"Update the dependencies array to be: [location, user?.token]",{"range":"258","text":"259"},"Update the dependencies array to be: [donor?.token, location, user?.token]",{"range":"260","text":"261"},"Update the dependencies array to be: [props.donor]",{"range":"262","text":"263"},{"range":"264","text":"263"},"Update the dependencies array to be: [location, transaction?.token, user?.token]",{"range":"265","text":"266"},"Update the dependencies array to be: [props.transaction]",{"range":"267","text":"268"},{"range":"269","text":"268"},[668,678],"[location, user?.result.email, user?.token]",[1027,1037],"[location, user?.token]",[674,684],"[donor?.token, location, user?.token]",[1101,1103],"[props.donor]",[1470,1472],[739,749],"[location, transaction?.token, user?.token]",[1195,1197],"[props.transaction]",[1517,1519]]