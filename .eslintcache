[{"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/index.js":"1","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/reportWebVitals.js":"2","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/App.js":"3","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/reducers/index.js":"4","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Home/Home.jsx":"5","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Auth/Auth.jsx":"6","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/NavBar/Navbar.jsx":"7","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/reducers/auth.js":"8","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Auth/styles.js":"9","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Auth/Icon.js":"10","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/NavBar/styles.js":"11","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/constants/actionTypes.js":"12","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/actions/auth.js":"13","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/api/index.js":"14","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/DonorList.js":"15","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Form.js":"16","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/APIService.js":"17","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Home/WithUser.js":"18","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Home/WithoutUser.js":"19"},{"size":776,"mtime":1616077374050,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1611577315000,"results":"22","hashOfConfig":"21"},{"size":545,"mtime":1616410176091,"results":"23","hashOfConfig":"21"},{"size":111,"mtime":1611577315000,"results":"24","hashOfConfig":"21"},{"size":583,"mtime":1616410163063,"results":"25","hashOfConfig":"21"},{"size":2503,"mtime":1616000168564,"results":"26","hashOfConfig":"21"},{"size":2059,"mtime":1615411244033,"results":"27","hashOfConfig":"21"},{"size":540,"mtime":1611577315000,"results":"28","hashOfConfig":"21"},{"size":618,"mtime":1611577315000,"results":"29","hashOfConfig":"21"},{"size":485,"mtime":1611577315000,"results":"30","hashOfConfig":"21"},{"size":240,"mtime":1611577315000,"results":"31","hashOfConfig":"21"},{"size":57,"mtime":1611577315000,"results":"32","hashOfConfig":"21"},{"size":550,"mtime":1615409555888,"results":"33","hashOfConfig":"21"},{"size":455,"mtime":1611577315000,"results":"34","hashOfConfig":"21"},{"size":4851,"mtime":1616092353506,"results":"35","hashOfConfig":"21"},{"size":11428,"mtime":1616092714014,"results":"36","hashOfConfig":"21"},{"size":830,"mtime":1616062730242,"results":"37","hashOfConfig":"21"},{"size":2648,"mtime":1616409549677,"results":"38","hashOfConfig":"21"},{"size":219,"mtime":1616410334128,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"fk7i4s",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/index.js",[],["82","83"],"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/reportWebVitals.js",[],"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/App.js",[],"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/reducers/index.js",[],"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Home/Home.jsx",["84","85","86"],"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Auth/Auth.jsx",["87","88","89","90"],"import React, { useState } from 'react'\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport useStyles from './styles'\nimport { Icon } from './Icon'\nimport { GoogleLogin } from 'react-google-login'\nimport { useDispatch } from 'react-redux'\nimport { AUTH } from '../../constants/actionTypes'\nimport { useHistory } from 'react-router-dom'\nimport { signIn, signUp } from '../../actions/auth'\n\nconst initialState = { firstName: '', lastName: '', email: '', password: '', confirmPassword: '' }\n\nexport const Auth = () => {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [isSignUp, setIsSignUp] = useState(false)\n    const [form, setForm] = useState(initialState)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        if (isSignUp) {\n            dispatch(signUp(form, history))\n        } else {\n            dispatch(signIn(form, history))\n        }\n    }\n\n    const googleSuccess = async (res) => {\n        const result = res?.profileObj\n        const token = res?.tokenId\n        console.log(res)\n\n        try {\n            dispatch({ type: AUTH, data: { result, token } });\n            history.push('/')\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    const googleFailure = (error) => {\n        console.log(error)\n    }\n\n    return (\n        <Container component='main' maxWidth='xs'>\n            <Paper className={classes.paper} elevation={3}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <form className={classes.form} onSubmit={handleSubmit}>\n                    <GoogleLogin\n                        clientId='418571538477-t9fcp3230p21kcio23nb0euf0dtelimb.apps.googleusercontent.com'\n                        render={(renderProps) => (\n                            <Button className={classes.googleButton} color='primary' fullWidth onClick={renderProps.onClick} disabled={renderProps.disabled} startIcon={<Icon />} variant='contained'>\n                                Google Sign In\n                            </Button>\n                        )}\n                        onSuccess={googleSuccess}\n                        onFailure={googleFailure}\n                        cookiePolicy='single_host_origin'\n                    />\n                </form>\n            </Paper>\n        </Container>\n    )\n}\n","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/NavBar/Navbar.jsx",["91","92"],"import React, { useState, useEffect } from 'react'\nimport { Link, useHistory, useLocation } from 'react-router-dom'\nimport useStyles from './styles'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport { Avatar, Typography, IconButton, Toolbar, AppBar, Button } from '@material-ui/core'\nimport { useDispatch } from 'react-redux'\nimport { LOGOUT } from '../../constants/actionTypes'\n\nexport const Navbar = () => {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const location = useLocation()\n\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')))\n    const userName = user?.result.name\n    const imgUrl = user?.result.imageUrl\n\n    // console.log(user)\n\n    const handleLogout = () => {\n        dispatch({ type: LOGOUT })\n        history.push('/auth')\n        setUser(null)\n    }\n\n    useEffect(() => {\n        const token = user?.token\n\n        setUser(JSON.parse(localStorage.getItem('profile')))\n    }, [location])\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography component={Link} to='/' variant=\"h6\" className={classes.title}>\n                        Title\n                    </Typography>\n                    {user\n                        ? <div>\n                            <Avatar ><img src={imgUrl} alt={userName} /></Avatar>\n                            <Typography variant='h6'>{userName}</Typography>\n                            <Button onClick={handleLogout} size='small' variant='contained' color='secondary'>Logout</Button>\n                        </div>\n                        : <Button component={Link} to='/auth' size='small' variant='contained' color='secondary'>Login</Button>\n                    }\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\n","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/reducers/auth.js",[],"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Auth/styles.js",[],"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Auth/Icon.js",[],"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/NavBar/styles.js",[],"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/constants/actionTypes.js",[],"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/actions/auth.js",[],"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/api/index.js",[],"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/DonorList.js",["93","94","95","96","97","98","99","100","101"],"import React from 'react';\nimport APIService from '../APIService';\n\n\nfunction DonorList(props) {\n\n    let headers = [\"Title\",\"Family_Name\",\"First_Name\",\"Current_Address\",\"Email\",\"Phone\",\"First_Donation_Date\",\"Recruitment_Source\",\"Number_of_Donations\",\"Last_Donation_Amount\",\"SEF_POC\"]\n    // let headers = [\"Title\",\"Family_Name\",\"First_Name\",\"Current_Address\",\"Email\",\"Phone\",\"Birth_Date\",\"First_Donation_Date\",\"Recruitment_Source\",\"Recruitment_Reason\",\"Number_of_Donations\",\"Cumulative_Donation_Amount\",\"Last_Donation_Amount\",\"Date_of_Last_Donation\",\"Preferred_Communication\",\"Date_of_Last_Communication\",\"Last_communication\",\"SEF_POC\",\"Notes\",\"Email_Communication_Rate\"]\n\n    const editBtn = (donor) => {\n        props.editBtn(donor)\n    }\n\n   const deleteBtn = (donor) => {\n    APIService.DeleteDonor(donor.id)\n    .then(() => props.deleteBtn(donor))\n    .catch(error => console.log(error))\n    }\n\n    return (\n        <div>            \n            <table id='donors'> \n               <tbody>\n                   <tr>{headers.map((key, index) => {\n                        return <th key={index}>{key.toUpperCase()}</th>\n                    })}</tr>\n                  {props.donors && props.donors.map((donor, index) => {\n                    const { id, Title, Family_Name,\n                        First_Name,\n                        Current_Address,\n                        Email,\n                        Phone,\n                        Birth_Date,\n                        First_Donation_Date,\n                        Recruitment_Source,\n                        Recruitment_Reason,\n                        Number_of_Donations,\n                        Cumulative_Donation_Amount,\n                        Last_Donation_Amount,\n                        Date_of_Last_Donation,\n                        Preferred_Communication,\n                        Date_of_Last_Communication,\n                        Last_communication,\n                        SEF_POC,\n                        Notes,\n                        Email_Communication_Rate } = donor //destructuring\n                    return (\n                        <tr key={id}>\n                            <td>{Title}</td>\n                            <td>{Family_Name}</td>\n                            <td>{First_Name}</td>\n                            <td>{Current_Address}</td>\n                            <td>{Email}</td>\n                            <td>{Phone}</td>\n                            {/* <td>{Birth_Date}</td> */}\n                            <td>{First_Donation_Date}</td>\n                            <td>{Recruitment_Source}</td>\n                            {/* <td>{Recruitment_Reason}</td> */}\n                            <td>{Number_of_Donations}</td>\n                            {/* <td>{Cumulative_Donation_Amount}</td> */}\n                            <td>{Last_Donation_Amount}</td>\n                            {/* <td>{Date_of_Last_Donation}</td> */}\n                            {/* <td>{Preferred_Communication}</td> */}\n                            {/* <td>{Date_of_Last_Communication}</td> */}\n                            {/* <td>{Last_communication}</td> */}\n                            <td>{SEF_POC}</td>\n                            {/* <td>{Notes}</td> */}\n                            {/* <td>{Email_Communication_Rate}</td> */}\n                            <td><button className = \"btn btn-primary\" onClick  = {() => editBtn(donor)}>Update</button></td>\n                            <td><button onClick = {() => deleteBtn(donor)} className = \"btn btn-danger\">Delete</button></td>\n                        </tr>\n                    )\n                    })}\n               </tbody>\n            </table>\n\n            {/* {props.donors && props.donors.map(donor => {\n                return (\n                    <div key={donor.id}>\n                    <h2>{donor.First_Name}</h2>\n                    <p>First Donation Date: {donor.First_Donation_Date}</p>\n                    <p>Number of Donations: {donor.Number_of_Donations}</p>\n                    <p>Cumulative Donation Amount: {donor.Cumulative_Donation_Amount}</p>\n                    <p>Date of Last Donation: {donor.Date_of_Last_Donation}</p>\n                    <p>SEF POC: {donor.SEF_POC}</p>\n\n\n\n                    <div className = \"row\">\n                        <div className = \"col-md-1\">\n                            <button className = \"btn btn-primary\" onClick  = {() => editBtn(donor)}>Update</button>\n                        </div>\n                        <div className = \"col\">\n                            <button onClick = {() => deleteBtn(donor)} className = \"btn btn-danger\">Delete</button>\n                        </div>\n                    </div>\n                    <hr className=\"hrclass\"/>\n                    </div>\n                )\n            })} */}\n        </div>\n    )\n}\n\nexport default DonorList\n","/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Form.js",[],"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/APIService.js",[],"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Home/WithUser.js",[],"/home/mittooji/Desktop/Frontend/Team_7_SEF_Frontend/src/components/Home/WithoutUser.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":9,"column":9,"nodeType":"108","messageId":"109","endLine":9,"endColumn":17},{"ruleId":"106","severity":1,"message":"110","line":11,"column":13,"nodeType":"108","messageId":"109","endLine":11,"endColumn":18},{"ruleId":"111","severity":1,"message":"112","line":13,"column":6,"nodeType":"113","endLine":13,"endColumn":16,"suggestions":"114"},{"ruleId":"106","severity":1,"message":"115","line":2,"column":33,"nodeType":"108","messageId":"109","endLine":2,"endColumn":37},{"ruleId":"106","severity":1,"message":"116","line":2,"column":39,"nodeType":"108","messageId":"109","endLine":2,"endColumn":49},{"ruleId":"106","severity":1,"message":"117","line":18,"column":22,"nodeType":"108","messageId":"109","endLine":18,"endColumn":33},{"ruleId":"106","severity":1,"message":"118","line":19,"column":18,"nodeType":"108","messageId":"109","endLine":19,"endColumn":25},{"ruleId":"106","severity":1,"message":"110","line":28,"column":15,"nodeType":"108","messageId":"109","endLine":28,"endColumn":20},{"ruleId":"111","severity":1,"message":"112","line":31,"column":8,"nodeType":"113","endLine":31,"endColumn":18,"suggestions":"119"},{"ruleId":"106","severity":1,"message":"120","line":33,"column":25,"nodeType":"108","messageId":"109","endLine":33,"endColumn":35},{"ruleId":"106","severity":1,"message":"121","line":36,"column":25,"nodeType":"108","messageId":"109","endLine":36,"endColumn":43},{"ruleId":"106","severity":1,"message":"122","line":38,"column":25,"nodeType":"108","messageId":"109","endLine":38,"endColumn":51},{"ruleId":"106","severity":1,"message":"123","line":40,"column":25,"nodeType":"108","messageId":"109","endLine":40,"endColumn":46},{"ruleId":"106","severity":1,"message":"124","line":41,"column":25,"nodeType":"108","messageId":"109","endLine":41,"endColumn":48},{"ruleId":"106","severity":1,"message":"125","line":42,"column":25,"nodeType":"108","messageId":"109","endLine":42,"endColumn":51},{"ruleId":"106","severity":1,"message":"126","line":43,"column":25,"nodeType":"108","messageId":"109","endLine":43,"endColumn":43},{"ruleId":"106","severity":1,"message":"127","line":45,"column":25,"nodeType":"108","messageId":"109","endLine":45,"endColumn":30},{"ruleId":"106","severity":1,"message":"128","line":46,"column":25,"nodeType":"108","messageId":"109","endLine":46,"endColumn":49},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'userName' is assigned a value but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user?.token'. Either include it or remove the dependency array.","ArrayExpression",["131"],"'Grid' is defined but never used.","'Typography' is defined but never used.","'setIsSignUp' is assigned a value but never used.","'setForm' is assigned a value but never used.",["132"],"'Birth_Date' is assigned a value but never used.","'Recruitment_Reason' is assigned a value but never used.","'Cumulative_Donation_Amount' is assigned a value but never used.","'Date_of_Last_Donation' is assigned a value but never used.","'Preferred_Communication' is assigned a value but never used.","'Date_of_Last_Communication' is assigned a value but never used.","'Last_communication' is assigned a value but never used.","'Notes' is assigned a value but never used.","'Email_Communication_Rate' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},{"desc":"133","fix":"135"},"Update the dependencies array to be: [location, user?.token]",{"range":"136","text":"137"},{"range":"138","text":"137"},[467,477],"[location, user?.token]",[991,1001]]